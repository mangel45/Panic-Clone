
  // --------------
  // 3D Truck Magic
  // --------------
  
  var container = document.getElementById('container');
  var header = document.getElementsByTagName("header")[0];
  
  var truck = new TransmitTruck({
      // Required: 'container' element where the WebGL canvas will be inserted
      container: container,
      
      // The following properties are optional and have these default values:
      antialias: true,
      maxPixelRatio: 2,
      autoRotationEnabled: true,
      autoRotationSpeed: 0.12,
      manualRotationEnabled: true,
      manualRotationSpeed: 0.12
  });
  
  // Load the required 3D assets & textures
  truck.load(function() {
   
      // Start the rendering loop
      truck.start();
      
      handleScrolling();
      
      // Do this at page load so that camera angle is correct if the user has scrolled before reloading
      updateCameraAngle();

	  var container = document.getElementById("container");
	  truck.setSize((container.offsetWidth),(container.offsetHeight));
      
      // Fade container
      header.dataset.loaded = "yes";
  });
  
  // Other available methods, if needed:
  // - truck.setSize(width, height);
  // - truck.pause();
  // - truck.resume();
  
  function updateCameraAngle() {
  
      // Number of pixels that must be scrolled for the camera to be parallel to the ground.
      // Note: this value depends on the window size and page layout and thus should not be hard coded.
      var scrollRange = 400;
      
      // setCameraAngle expects a value between 0 and 1 (values outside this range are automatically clamped).
      truck.setCameraAngle(window.scrollY / scrollRange);
  }
  
  function handleScrolling() {
      var ticking = false;
      
      window.addEventListener('scroll', function(e) {
          if (!ticking) {
              // Scroll optimization to throttle the event which fires at a high rate
              // (https://developer.mozilla.org/en-US/docs/Web/Events/scroll)
              window.requestAnimationFrame(function () {
                  updateCameraAngle();
                  ticking = false;
              });
          }
          ticking = true;
      });
  }